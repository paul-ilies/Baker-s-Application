{"ast":null,"code":"var _jsxFileName = \"D:\\\\Baker-s-Application\\\\front-end\\\\src\\\\componente\\\\calculator\\\\Calculator.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\nimport \"./calculator.css\";\nimport { useCalcGlobalContext } from \"../../context/ContextCalculator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calculator = () => {\n  _s();\n\n  //destructurare functii create in ContextCalculator\n  const {\n    state,\n    onChange,\n    resetHandle\n  } = useCalcGlobalContext();\n  const ingrediente = state;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"shadow-lg p-3 mb-5 bg-white rounded h-100\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          style: {\n            color: \"#FF7518\"\n          },\n          children: \"Simple Dough Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [[...ingrediente].map((name, index) => {\n          return /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                lg: 4,\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"input\",\n                  type: \"number\",\n                  inputMode: \"numeric\",\n                  min: \"0\",\n                  max: name === \"Flour\" ? \"2000\" : name === \"Water\" ? \"1600\" : name === \"Hidration\" ? \"80\" : name === \"Yeast\" ? \"40\" : name === \"Salt\" ? \"40\" : \"0\",\n                  readOnly: name === \"Yeast\" || name === \"Salt\" ? true : false,\n                  name: name,\n                  value: ingrediente[name],\n                  onChange: onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                className: \"my-auto\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"range\",\n                  min: \"0\",\n                  max: name === \"Flour\" ? \"2000\" : name === \"Water\" ? \"1600\" : name === \"Hidration\" ? \"80\" : name === \"Yeast\" ? \"40\" : name === \"Salt\" ? \"40\" : \"0\",\n                  disabled: name === \"Yeast\" || name === \"Salt\" ? true : false,\n                  name: name,\n                  value: ingrediente[name],\n                  onChange: onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mt-5\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"warning\",\n              size: \"lg\",\n              block: true,\n              className: \"rounded\",\n              onClick: resetHandle,\n              children: \"Clear Selections\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calculator, \"XJpxkQnMf4/VjSaQRRvmTTf4Aw4=\", false, function () {\n  return [useCalcGlobalContext];\n});\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["D:/Baker-s-Application/front-end/src/componente/calculator/Calculator.js"],"names":["React","Button","Card","Col","Form","Row","useCalcGlobalContext","Calculator","state","onChange","resetHandle","ingrediente","color","map","name","index"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport \"./calculator.css\";\r\nimport { useCalcGlobalContext } from \"../../context/ContextCalculator\";\r\n\r\nconst Calculator = () => {\r\n  //destructurare functii create in ContextCalculator\r\n  const { state, onChange, resetHandle } = useCalcGlobalContext();\r\n\r\n  const ingrediente = state;\r\n\r\n  return (\r\n    <Card className=\"shadow-lg p-3 mb-5 bg-white rounded h-100\">\r\n      <Card.Body>\r\n        <Card.Title>\r\n          <h3 className=\"text-center\" style={{ color: \"#FF7518\" }}>\r\n            Simple Dough Calculator\r\n          </h3>\r\n        </Card.Title>\r\n        <Form>\r\n          {[...ingrediente].map((name, index) => {\r\n            return (\r\n              <Form.Group key={index}>\r\n                <Form.Label>{name}</Form.Label>\r\n                <Row>\r\n                  {/* Start Coloana Inputuri */}\r\n                  <Col lg={4}>\r\n                    <Form.Control\r\n                      as=\"input\"\r\n                      type=\"number\"\r\n                      inputMode=\"numeric\"\r\n                      min=\"0\"\r\n                      max={\r\n                        name === \"Flour\"\r\n                          ? \"2000\"\r\n                          : name === \"Water\"\r\n                          ? \"1600\"\r\n                          : name === \"Hidration\"\r\n                          ? \"80\"\r\n                          : name === \"Yeast\"\r\n                          ? \"40\"\r\n                          : name === \"Salt\"\r\n                          ? \"40\"\r\n                          : \"0\"\r\n                      }\r\n                      readOnly={\r\n                        name === \"Yeast\" || name === \"Salt\" ? true : false\r\n                      }\r\n                      name={name}\r\n                      value={ingrediente[name]}\r\n                      onChange={onChange}\r\n                    />\r\n                  </Col>\r\n                  {/* Sfarsit Coloana Inputuri */}\r\n                  {/* Start Range Column */}\r\n                  <Col className=\"my-auto\">\r\n                    <Form.Control\r\n                      type=\"range\"\r\n                      min=\"0\"\r\n                      max={\r\n                        name === \"Flour\"\r\n                          ? \"2000\"\r\n                          : name === \"Water\"\r\n                          ? \"1600\"\r\n                          : name === \"Hidration\"\r\n                          ? \"80\"\r\n                          : name === \"Yeast\"\r\n                          ? \"40\"\r\n                          : name === \"Salt\"\r\n                          ? \"40\"\r\n                          : \"0\"\r\n                      }\r\n                      disabled={\r\n                        name === \"Yeast\" || name === \"Salt\" ? true : false\r\n                      }\r\n                      name={name}\r\n                      value={ingrediente[name]}\r\n                      onChange={onChange}\r\n                    />\r\n                  </Col>\r\n                  {/* Sfarsit Range Column */}\r\n                </Row>\r\n              </Form.Group>\r\n            );\r\n          })}\r\n          <Row className=\"mt-5\">\r\n            <Col>\r\n              <Button\r\n                variant=\"warning\"\r\n                size=\"lg\"\r\n                block\r\n                className=\"rounded\"\r\n                onClick={resetHandle}\r\n              >\r\n                Clear Selections\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n"]},"metadata":{},"sourceType":"module"}