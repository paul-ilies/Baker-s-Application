{"ast":null,"code":"var _jsxFileName = \"D:\\\\Baker-s-Application\\\\front-end\\\\src\\\\componente\\\\calculator\\\\Calculator.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap';\nimport './calculator.css';\nimport { useCalcGlobalContext } from '../../context/ContextCalculator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calculator = () => {\n  _s();\n\n  //destructurare functii create in ContextCalculator\n  const {\n    state,\n    onChange,\n    resetHandle\n  } = useCalcGlobalContext();\n  const ingrediente = state;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"shadow-lg p-3 mb-5 bg-white rounded h-100\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          style: {\n            color: \"#FF7518\"\n          },\n          children: \"Simple Dough Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [Object.keys(ingrediente).map((name, index) => {\n          return /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                lg: 4,\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"input\",\n                  type: \"number\",\n                  inputMode: \"numeric\",\n                  min: \"0\",\n                  max: name === \"Flour\" ? \"2000\" : name === \"Water\" ? \"1600\" : name === \"Hidration\" ? \"80\" : name === \"Yeast\" ? \"40\" : name === \"Salt\" ? \"40\" : \"0\",\n                  readOnly: name === \"Yeast\" || name === \"Salt\" ? true : false,\n                  name: name,\n                  value: ingrediente[name],\n                  onChange: onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                className: \"my-auto\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"range\",\n                  min: \"0\",\n                  max: name === \"Flour\" ? \"2000\" : name === \"Water\" ? \"1600\" : name === \"Hidration\" ? \"80\" : name === \"Yeast\" ? \"40\" : name === \"Salt\" ? \"40\" : \"0\",\n                  disabled: name === \"Yeast\" || name === \"Salt\" ? true : false,\n                  name: name,\n                  value: ingrediente[name],\n                  onChange: onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 37\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mt-5\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"warning\",\n              size: \"lg\",\n              block: true,\n              className: \"rounded\",\n              onClick: resetHandle,\n              children: \"Clear Selections\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Calculator, \"XJpxkQnMf4/VjSaQRRvmTTf4Aw4=\", false, function () {\n  return [useCalcGlobalContext];\n});\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["D:/Baker-s-Application/front-end/src/componente/calculator/Calculator.js"],"names":["React","Button","Card","Col","Form","Row","useCalcGlobalContext","Calculator","state","onChange","resetHandle","ingrediente","color","Object","keys","map","name","index"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap'\r\nimport './calculator.css'\r\nimport { useCalcGlobalContext } from '../../context/ContextCalculator'\r\n\r\nconst Calculator = () => {\r\n    //destructurare functii create in ContextCalculator\r\n    const { state, onChange, resetHandle } = useCalcGlobalContext()\r\n\r\n    const ingrediente = state\r\n\r\n    return (\r\n        <Card\r\n            className=\"shadow-lg p-3 mb-5 bg-white rounded h-100\">\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    <h3\r\n                        className=\"text-center\"\r\n                        style={{ color: \"#FF7518\" }}>\r\n                        Simple Dough Calculator\r\n                    </h3>\r\n                </Card.Title>\r\n                <Form >\r\n                    {\r\n                        Object\r\n                            .keys(ingrediente)\r\n                            .map((name, index) => {\r\n                                return (\r\n                                    <Form.Group\r\n                                        key={index}>\r\n                                        <Form.Label>\r\n                                            {name}\r\n                                        </Form.Label>\r\n                                        <Row>\r\n                                            {/* Start Coloana Inputuri */}\r\n                                            <Col lg={4}>\r\n                                                <Form.Control\r\n                                                    as=\"input\"\r\n                                                    type=\"number\"\r\n                                                    inputMode=\"numeric\"\r\n                                                    min=\"0\"\r\n                                                    max={\r\n                                                        name === \"Flour\" ? \"2000\" :\r\n                                                            name === \"Water\" ? \"1600\" :\r\n                                                                name === \"Hidration\" ? \"80\" :\r\n                                                                    name === \"Yeast\" ? \"40\" :\r\n                                                                        name === \"Salt\" ? \"40\" : \"0\"\r\n                                                    }\r\n                                                    readOnly={\r\n                                                        name === \"Yeast\" ||\r\n                                                            name === \"Salt\" ? true : false}\r\n                                                    name={name}\r\n                                                    value={ingrediente[name]}\r\n                                                    onChange={onChange}\r\n                                                />\r\n                                            </Col>\r\n                                            {/* Sfarsit Coloana Inputuri */}\r\n                                            {/* Start Range Column */}\r\n                                            <Col className=\"my-auto\">\r\n                                                <Form.Control\r\n                                                    type=\"range\"\r\n                                                    min=\"0\"\r\n                                                    max={\r\n                                                        name === \"Flour\" ? \"2000\" :\r\n                                                            name === \"Water\" ? \"1600\" :\r\n                                                                name === \"Hidration\" ? \"80\" :\r\n                                                                    name === \"Yeast\" ? \"40\" :\r\n                                                                        name === \"Salt\" ? \"40\" : \"0\"\r\n                                                    }\r\n                                                    disabled={\r\n                                                        name === \"Yeast\" ||\r\n                                                            name === \"Salt\" ? true : false}\r\n                                                    name={name}\r\n                                                    value={ingrediente[name]}\r\n                                                    onChange={onChange}\r\n                                                />\r\n                                            </Col>\r\n                                            {/* Sfarsit Range Column */}\r\n                                        </Row>\r\n                                    </Form.Group>\r\n                                )\r\n                            })\r\n                    }\r\n                    <Row className=\"mt-5\" >\r\n                        <Col >\r\n                            <Button\r\n                                variant=\"warning\"\r\n                                size=\"lg\"\r\n                                block\r\n                                className=\"rounded\"\r\n                                onClick={resetHandle}\r\n                            >Clear Selections\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Calculator\r\n"]},"metadata":{},"sourceType":"module"}