{"ast":null,"code":"export const CalcReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  if (type === \"GET_QUANTITY\") {\n    const {\n      name,\n      value\n    } = payload.target;\n    const getValues = {\n      [name]: value\n    };\n\n    if (getValues.Flour >= 0) {\n      return { ...state,\n        Flour: parseInt(getValues.Flour).toFixed(),\n        Water: parseInt(getValues.Flour * state.Hidration / 100).toFixed(),\n        Salt: parseInt(getValues.Flour * 0.02).toFixed(),\n        Yeast: parseInt(getValues.Flour * 0.02).toFixed(),\n        Hidration: state.Hidration\n      };\n    }\n\n    if (getValues.Water >= 0) {\n      return { ...state,\n        Water: getValues.Water,\n        Hidration: parseInt(getValues.Water / state.Flour * 100).toFixed(0)\n      };\n    }\n\n    if (getValues.Hidration >= 0) {\n      return { ...state,\n        Hidration: getValues.Hidration,\n        Water: parseInt(state.Flour * getValues.Hidration / 100).toFixed(0)\n      };\n    }\n  }\n\n  if (type === \"RESET_FIELDS\") {\n    return { ...state,\n      ...payload\n    };\n  }\n\n  return { ...state\n  };\n};\n_c = CalcReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalcReducer\");","map":{"version":3,"sources":["D:/Baker-s-Application/front-end/src/reducer/ReducerCalculator.js"],"names":["CalcReducer","state","action","type","payload","name","value","target","getValues","Flour","parseInt","toFixed","Water","Hidration","Salt","Yeast"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,MAAIC,IAAI,KAAK,cAAb,EAA6B;AAC3B,UAAM;AAAEE,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,OAAO,CAACG,MAAhC;AACA,UAAMC,SAAS,GAAG;AAAE,OAACH,IAAD,GAAQC;AAAV,KAAlB;;AACA,QAAIE,SAAS,CAACC,KAAV,IAAmB,CAAvB,EAA0B;AACxB,aAAO,EACL,GAAGR,KADE;AAELQ,QAAAA,KAAK,EAAEC,QAAQ,CAACF,SAAS,CAACC,KAAX,CAAR,CAA0BE,OAA1B,EAFF;AAGLC,QAAAA,KAAK,EAAEF,QAAQ,CAAEF,SAAS,CAACC,KAAV,GAAkBR,KAAK,CAACY,SAAzB,GAAsC,GAAvC,CAAR,CAAoDF,OAApD,EAHF;AAILG,QAAAA,IAAI,EAAEJ,QAAQ,CAACF,SAAS,CAACC,KAAV,GAAkB,IAAnB,CAAR,CAAiCE,OAAjC,EAJD;AAKLI,QAAAA,KAAK,EAAEL,QAAQ,CAACF,SAAS,CAACC,KAAV,GAAkB,IAAnB,CAAR,CAAiCE,OAAjC,EALF;AAMLE,QAAAA,SAAS,EAAEZ,KAAK,CAACY;AANZ,OAAP;AAQD;;AACD,QAAIL,SAAS,CAACI,KAAV,IAAmB,CAAvB,EAA0B;AACxB,aAAO,EACL,GAAGX,KADE;AAELW,QAAAA,KAAK,EAAEJ,SAAS,CAACI,KAFZ;AAGLC,QAAAA,SAAS,EAAEH,QAAQ,CAAEF,SAAS,CAACI,KAAV,GAAkBX,KAAK,CAACQ,KAAzB,GAAkC,GAAnC,CAAR,CAAgDE,OAAhD,CAAwD,CAAxD;AAHN,OAAP;AAKD;;AACD,QAAIH,SAAS,CAACK,SAAV,IAAuB,CAA3B,EAA8B;AAC5B,aAAO,EACL,GAAGZ,KADE;AAELY,QAAAA,SAAS,EAAEL,SAAS,CAACK,SAFhB;AAGLD,QAAAA,KAAK,EAAEF,QAAQ,CAAET,KAAK,CAACQ,KAAN,GAAcD,SAAS,CAACK,SAAzB,GAAsC,GAAvC,CAAR,CAAoDF,OAApD,CAA4D,CAA5D;AAHF,OAAP;AAKD;AACF;;AAED,MAAIR,IAAI,KAAK,cAAb,EAA6B;AAC3B,WAAO,EAAE,GAAGF,KAAL;AAAY,SAAGG;AAAf,KAAP;AACD;;AACD,SAAO,EAAE,GAAGH;AAAL,GAAP;AACD,CApCM;KAAMD,W","sourcesContent":["export const CalcReducer = (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  if (type === \"GET_QUANTITY\") {\r\n    const { name, value } = payload.target;\r\n    const getValues = { [name]: value };\r\n    if (getValues.Flour >= 0) {\r\n      return {\r\n        ...state,\r\n        Flour: parseInt(getValues.Flour).toFixed(),\r\n        Water: parseInt((getValues.Flour * state.Hidration) / 100).toFixed(),\r\n        Salt: parseInt(getValues.Flour * 0.02).toFixed(),\r\n        Yeast: parseInt(getValues.Flour * 0.02).toFixed(),\r\n        Hidration: state.Hidration,\r\n      };\r\n    }\r\n    if (getValues.Water >= 0) {\r\n      return {\r\n        ...state,\r\n        Water: getValues.Water,\r\n        Hidration: parseInt((getValues.Water / state.Flour) * 100).toFixed(0),\r\n      };\r\n    }\r\n    if (getValues.Hidration >= 0) {\r\n      return {\r\n        ...state,\r\n        Hidration: getValues.Hidration,\r\n        Water: parseInt((state.Flour * getValues.Hidration) / 100).toFixed(0),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"RESET_FIELDS\") {\r\n    return { ...state, ...payload };\r\n  }\r\n  return { ...state };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}